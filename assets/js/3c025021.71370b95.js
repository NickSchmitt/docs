"use strict";(self.webpackChunkatmo_trial_doc=self.webpackChunkatmo_trial_doc||[]).push([[276],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(n),m=a,d=f["".concat(c,".").concat(m)]||f[m]||s[m]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8827:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},c="Static files",u={unversionedId:"atmo/runnable-api/file",id:"atmo/runnable-api/file",title:"Static files",description:"Files in the static directory of an Atmo project will be copied",source:"@site/docs/atmo/runnable-api/file.md",sourceDirName:"atmo/runnable-api",slug:"/atmo/runnable-api/file",permalink:"/docs/atmo/runnable-api/file",editUrl:"https://github.com/suborbital/docs/docs/atmo/runnable-api/file.md",tags:[],version:"current",lastUpdatedAt:1642876873,formattedLastUpdatedAt:"1/22/2022",frontMatter:{},sidebar:"docs",previous:{title:"Example Runnable",permalink:"/docs/atmo/runnable-api/example-runnable"},next:{title:"GraphQL requests",permalink:"/docs/atmo/runnable-api/graphql-requests"}},p=[{value:"Get Static",id:"get-static",children:[],level:2}],s={toc:p};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"static-files"},"Static files"),(0,i.kt)("p",null,"Files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"static")," directory of an Atmo project will be copied\ninto the Runnable Bundle by ",(0,i.kt)("inlineCode",{parentName:"p"},"subo"),". Those files can then be\naccessed by Runnables. The directory is mounted as a\nsandboxed read-only filesystem."),(0,i.kt)("p",null,"For Rust, these methods are available under the ",(0,i.kt)("inlineCode",{parentName:"p"},"file")," module."),(0,i.kt)("p",null,"Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"file::get_static()"),"."),(0,i.kt)("p",null,"The following namespace methods are available:"),(0,i.kt)("h2",{id:"get-static"},"Get Static"),(0,i.kt)("p",null,"Retrieves the contents of the static file with the given name"),(0,i.kt)("p",null,"Rust:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn get_static(name: &str) -> Result<Vec<u8>, RunErr>\n")),(0,i.kt)("p",null,"AssemblyScript:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"// not yet supported\n")),(0,i.kt)("p",null,"Swift:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public func GetStaticFile(name: String) -> String\n")))}f.isMDXComponent=!0}}]);