"use strict";(self.webpackChunksuborbital_docs=self.webpackChunksuborbital_docs||[]).push([[1598],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function u(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),o=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):u(u({},t),e)),a},p=function(e){var t=o(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=o(a),m=n,b=d["".concat(i,".").concat(m)]||d[m]||c[m]||l;return a?r.createElement(b,u(u({ref:t},p),{},{components:a})):r.createElement(b,u({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,u=new Array(l);u[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,u[1]=s;for(var o=2;o<l;o++)u[o]=a[o];return r.createElement.apply(null,u)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8215:function(e,t,a){var r=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,n=e.className;return r.createElement("div",{role:"tabpanel",hidden:a,className:n},t)}},9877:function(e,t,a){a.d(t,{Z:function(){return p}});var r=a(7462),n=a(7294),l=a(2389),u=a(9548),s=a(6010),i="tabItem_LplD";function o(e){var t,a,l,o=e.lazy,p=e.block,c=e.defaultValue,d=e.values,m=e.groupId,b=e.className,f=n.Children.map(e.children,(function(e){if((0,n.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=d?d:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,u.lx)(k,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===c?c:null!=(t=null!=c?c:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=f[0])?void 0:l.props.value;if(null!==y&&!k.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=(0,u.UB)(),v=h.tabGroupChoices,T=h.setTabGroupChoices,N=(0,n.useState)(y),w=N[0],I=N[1],S=[],q=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=v[m];null!=x&&x!==w&&k.some((function(e){return e.value===x}))&&I(x)}var R=function(e){var t=e.currentTarget,a=S.indexOf(t),r=k[a].value;r!==w&&(q(t),I(r),null!=m&&T(m,r))},Z=function(e){var t,a=null;switch(e.key){case"ArrowRight":var r=S.indexOf(e.currentTarget)+1;a=S[r]||S[0];break;case"ArrowLeft":var n=S.indexOf(e.currentTarget)-1;a=S[n]||S[S.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},b)},k.map((function(e){var t=e.value,a=e.label,l=e.attributes;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:function(e){return S.push(e)},onKeyDown:Z,onFocus:R,onClick:R},l,{className:(0,s.Z)("tabs__item",i,null==l?void 0:l.className,{"tabs__item--active":w===t})}),null!=a?a:t)}))),o?(0,n.cloneElement)(f.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function p(e){var t=(0,l.Z)();return n.createElement(o,(0,r.Z)({key:String(t)},e))}},4130:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return d},default:function(){return b}});var r=a(7462),n=a(3366),l=(a(7294),a(3905)),u=a(9877),s=a(8215),i=["components"],o={},p="Handling requests",c={unversionedId:"atmo/runnable-api/request",id:"atmo/runnable-api/request",title:"Handling requests",description:"When a Runnable is used to handle an HTTP request, Atmo will bind that request to the Runnable. The req namespace of the Runnable API can then be used to access all of the information about the request. Note if the Runnable is not being used to handle a request, then all methods in the req namespace will return empty or an error.",source:"@site/docs/atmo/runnable-api/request.md",sourceDirName:"atmo/runnable-api",slug:"/atmo/runnable-api/request",permalink:"/docs/atmo/runnable-api/request",editUrl:"https://github.com/suborbital/docs/edit/main/website/docs/atmo/runnable-api/request.md",tags:[],version:"current",lastUpdatedAt:1645828798,formattedLastUpdatedAt:"2/25/2022",frontMatter:{},sidebar:"docs",previous:{title:"Introduction to the Runnable API",permalink:"/docs/atmo/runnable-api/introduction"},next:{title:"Modifying responses",permalink:"/docs/atmo/runnable-api/response"}},d=[{value:"Method",id:"method",children:[],level:2},{value:"URL",id:"url",children:[],level:2},{value:"ID",id:"id",children:[],level:2},{value:"Body",id:"body",children:[],level:2},{value:"Body Field",id:"body-field",children:[],level:2},{value:"Header",id:"header",children:[],level:2},{value:"URL Parameter",id:"url-parameter",children:[],level:2},{value:"State",id:"state",children:[],level:2}],m={toc:d};function b(e){var t=e.components,a=(0,n.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"handling-requests"},"Handling requests"),(0,l.kt)("p",null,"When a Runnable is used to handle an HTTP request, Atmo will bind that request to the Runnable. The ",(0,l.kt)("inlineCode",{parentName:"p"},"req")," namespace of the Runnable API can then be used to access all of the information about the request. Note if the Runnable is not being used to handle a request, then all methods in the ",(0,l.kt)("inlineCode",{parentName:"p"},"req")," namespace will return empty or an error."),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("p",null,"In Rust these methods are available under the ",(0,l.kt)("inlineCode",{parentName:"p"},"req")," module:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},'# Use the "req" module\nuse suborbital::req;\n\n# Invoke the "State" method\nreq::state(\u2026)\n'))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("p",null,"In TypeScript/AssemblyScript all methods are prefixed with ",(0,l.kt)("inlineCode",{parentName:"p"},"req"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"// Import then invoke \"State\" method\nimport { reqState } from '@suborbital/suborbital'\n\nreqState(\u2026)\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("p",null,"In Swift these methods are prefixed with ",(0,l.kt)("inlineCode",{parentName:"p"},"Req"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},'// Invoke the "State" method\nSuborbital.ReqState(\u2026)\n')))),(0,l.kt)("p",null,"The following namespace methods are available:"),(0,l.kt)("h2",{id:"method"},"Method"),(0,l.kt)("p",null,"Returns the HTTP method for the request:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn method() -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqMethod(): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqMethod() -> String\n")))),(0,l.kt)("h2",{id:"url"},"URL"),(0,l.kt)("p",null,"Returns the full URL of the request:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn url() -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqURL(): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqURL() -> String\n")))),(0,l.kt)("h2",{id:"id"},"ID"),(0,l.kt)("p",null,"Returns the unique ID assigned to the request by Atmo:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn id() -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqID(): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqID() -> String\n")))),(0,l.kt)("h2",{id:"body"},"Body"),(0,l.kt)("p",null,"Returns the full request body as bytes:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn body_raw() -> Vec<u8>\n\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqBody(): ArrayBuffer\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqBodyRaw() -> String\n")))),(0,l.kt)("h2",{id:"body-field"},"Body Field"),(0,l.kt)("p",null,"Returns the value for the provided key, if the request body\nis formatted as JSON:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn body_field(key: &str) -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqBodyField(key: string): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqBodyField(key: String) -> String\n")))),(0,l.kt)("h2",{id:"header"},"Header"),(0,l.kt)("p",null,"Returns the header value for the provided key:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn header(key: &str) -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqHeader(key: string): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqHeader(key: String) -> String\n")))),(0,l.kt)("h2",{id:"url-parameter"},"URL Parameter"),(0,l.kt)("p",null,"Returns the URL parameter for the provided key,"),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"/api/v1/user/:uuid")),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn url_param(key: &str) -> String\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqURLParam(key: string): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func ReqParam(key: String) -> String\n")))),(0,l.kt)("h2",{id:"state"},"State"),(0,l.kt)("p",null,"Returns the value from ",(0,l.kt)("a",{parentName:"p",href:"/docs/atmo/usage/managing-state"},"request state")," for the provided key:"),(0,l.kt)(u.Z,{groupId:"reactr-language",mdxType:"Tabs"},(0,l.kt)(s.Z,{value:"rust",label:"Rust",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn state(key: &str) -> Option<String>\n"))),(0,l.kt)(s.Z,{value:"assemblyscript",label:"AssemblyScript \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-typescript"},"function reqState(key: string): string\n"))),(0,l.kt)(s.Z,{value:"swift",label:"Swift \ud83e\uddea",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-swift"},"public func State(key: String) -> String\n")))))}b.isMDXComponent=!0}}]);